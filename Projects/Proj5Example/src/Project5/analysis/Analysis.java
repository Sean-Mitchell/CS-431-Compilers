/* This file was generated by SableCC (http://www.sablecc.org/). */

package Project5.analysis;

import Project5.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProg(AProg node);
    void caseAClassStmtsClassmethodstmts(AClassStmtsClassmethodstmts node);
    void caseAEpsilonClassmethodstmts(AEpsilonClassmethodstmts node);
    void caseAClassDefClassmethodstmt(AClassDefClassmethodstmt node);
    void caseAMethodDeclClassmethodstmt(AMethodDeclClassmethodstmt node);
    void caseAVarDeclClassmethodstmt(AVarDeclClassmethodstmt node);
    void caseAMethodStmtsMethodstmtseqs(AMethodStmtsMethodstmtseqs node);
    void caseAEpsilonMethodstmtseqs(AEpsilonMethodstmtseqs node);
    void caseAMethodDeclMethodstmtseq(AMethodDeclMethodstmtseq node);
    void caseAVarDeclMethodstmtseq(AVarDeclMethodstmtseq node);
    void caseAAssignEqualsMethodstmtseq(AAssignEqualsMethodstmtseq node);
    void caseAAssignStringMethodstmtseq(AAssignStringMethodstmtseq node);
    void caseAPrintStmtMethodstmtseq(APrintStmtMethodstmtseq node);
    void caseAAssignReadInMethodstmtseq(AAssignReadInMethodstmtseq node);
    void caseAAssignIncMethodstmtseq(AAssignIncMethodstmtseq node);
    void caseAAssignDecMethodstmtseq(AAssignDecMethodstmtseq node);
    void caseADeclObjectMethodstmtseq(ADeclObjectMethodstmtseq node);
    void caseAAssignBooleanMethodstmtseq(AAssignBooleanMethodstmtseq node);
    void caseAFirstStmtStmtseq(AFirstStmtStmtseq node);
    void caseAEpsilonStmtseq(AEpsilonStmtseq node);
    void caseAAssignExprStmt(AAssignExprStmt node);
    void caseAAssignStringStmt(AAssignStringStmt node);
    void caseAVarDeclStmt(AVarDeclStmt node);
    void caseAIfBlockStmt(AIfBlockStmt node);
    void caseAIfElseBlockStmt(AIfElseBlockStmt node);
    void caseAWhileStmt(AWhileStmt node);
    void caseAForStmt(AForStmt node);
    void caseAGetStmt(AGetStmt node);
    void caseAPutStmt(APutStmt node);
    void caseAIncrStmt(AIncrStmt node);
    void caseADecrStmt(ADecrStmt node);
    void caseADeclObjectStmt(ADeclObjectStmt node);
    void caseAMethodCallStmt(AMethodCallStmt node);
    void caseAMethodCallInClassStmt(AMethodCallInClassStmt node);
    void caseAReturnStmt(AReturnStmt node);
    void caseAAssignBooleanStmt(AAssignBooleanStmt node);
    void caseASwitchStmt(ASwitchStmt node);
    void caseAAnotherCaseCaseHelper(AAnotherCaseCaseHelper node);
    void caseAEpsilonCaseHelper(AEpsilonCaseHelper node);
    void caseABreakBreakHelper(ABreakBreakHelper node);
    void caseAEpsilonBreakHelper(AEpsilonBreakHelper node);
    void caseAMethodCallMethodChainingOption(AMethodCallMethodChainingOption node);
    void caseAEpsilonMethodChainingOption(AEpsilonMethodChainingOption node);
    void caseAIncrForIncrStep(AIncrForIncrStep node);
    void caseADecrForIncrStep(ADecrForIncrStep node);
    void caseAAssignmentForIncrStep(AAssignmentForIncrStep node);
    void caseAForOptionalType(AForOptionalType node);
    void caseAEpsilonForOptionalType(AEpsilonForOptionalType node);
    void caseAMoreIdsMoreIds(AMoreIdsMoreIds node);
    void caseAEpsilonMoreIds(AEpsilonMoreIds node);
    void caseAMoreIdsVarlist(AMoreIdsVarlist node);
    void caseAEpsilonVarlist(AEpsilonVarlist node);
    void caseAArrayArrayOption(AArrayArrayOption node);
    void caseAEpsilonArrayOption(AEpsilonArrayOption node);
    void caseAMoreIdsMoreVarlist(AMoreIdsMoreVarlist node);
    void caseAEpsilonMoreVarlist(AEpsilonMoreVarlist node);
    void caseAVarListVarListTwo(AVarListVarListTwo node);
    void caseAEpsilonVarListTwo(AEpsilonVarListTwo node);
    void caseAExprOrBool(AExprOrBool node);
    void caseABoolExprOrBool(ABoolExprOrBool node);
    void caseAMoreVarListTwo(AMoreVarListTwo node);
    void caseAEpsilonMoreVarListTwo(AEpsilonMoreVarListTwo node);
    void caseAAddExpr(AAddExpr node);
    void caseATermExpr(ATermExpr node);
    void caseAMultTerm(AMultTerm node);
    void caseAFactorTerm(AFactorTerm node);
    void caseAExprFactor(AExprFactor node);
    void caseANegativeFactor(ANegativeFactor node);
    void caseAIntFactor(AIntFactor node);
    void caseARealFactor(ARealFactor node);
    void caseAArrayFactor(AArrayFactor node);
    void caseAIdvarlistFactor(AIdvarlistFactor node);
    void caseALastFactor(ALastFactor node);
    void caseAArrayArrayOrId(AArrayArrayOrId node);
    void caseAIdArrayOrId(AIdArrayOrId node);
    void caseATrueBoolean(ATrueBoolean node);
    void caseAFalseBoolean(AFalseBoolean node);
    void caseAConditionalBoolean(AConditionalBoolean node);
    void caseABooleanBoolid(ABooleanBoolid node);
    void caseAIdBoolid(AIdBoolid node);
    void caseAPlusAddop(APlusAddop node);
    void caseAMinusAddop(AMinusAddop node);
    void caseATypesType(ATypesType node);
    void caseAIdType(AIdType node);

    void caseTPlusop(TPlusop node);
    void caseTNegop(TNegop node);
    void caseTMultop(TMultop node);
    void caseTCond(TCond node);
    void caseTBegin(TBegin node);
    void caseTBreak(TBreak node);
    void caseTCase(TCase node);
    void caseTClassLit(TClassLit node);
    void caseTDefault(TDefault node);
    void caseTElse(TElse node);
    void caseTEnd(TEnd node);
    void caseTFalse(TFalse node);
    void caseTFor(TFor node);
    void caseTGet(TGet node);
    void caseTIf(TIf node);
    void caseTNew(TNew node);
    void caseTPut(TPut node);
    void caseTReturn(TReturn node);
    void caseTSwitch(TSwitch node);
    void caseTThen(TThen node);
    void caseTTrue(TTrue node);
    void caseTWhile(TWhile node);
    void caseTComma(TComma node);
    void caseTColon(TColon node);
    void caseTPeriod(TPeriod node);
    void caseTSemicolon(TSemicolon node);
    void caseTEquals(TEquals node);
    void caseTIncr(TIncr node);
    void caseTDecr(TDecr node);
    void caseTLparen(TLparen node);
    void caseTRparen(TRparen node);
    void caseTLbracket(TLbracket node);
    void caseTRbracket(TRbracket node);
    void caseTLcurly(TLcurly node);
    void caseTRcurly(TRcurly node);
    void caseTTypeDecl(TTypeDecl node);
    void caseTId(TId node);
    void caseTReal(TReal node);
    void caseTInt(TInt node);
    void caseTAnychars(TAnychars node);
    void caseTWhitespace(TWhitespace node);
    void caseEOF(EOF node);
}
