/* This file was generated by SableCC (http://www.sablecc.org/). */

package Project5.node;

import Project5.analysis.*;

@SuppressWarnings("nls")
public final class AArrayFactor extends PFactor
{
    private PArrayOrId _arrayOrId_;

    public AArrayFactor()
    {
        // Constructor
    }

    public AArrayFactor(
        @SuppressWarnings("hiding") PArrayOrId _arrayOrId_)
    {
        // Constructor
        setArrayOrId(_arrayOrId_);

    }

    @Override
    public Object clone()
    {
        return new AArrayFactor(
            cloneNode(this._arrayOrId_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArrayFactor(this);
    }

    public PArrayOrId getArrayOrId()
    {
        return this._arrayOrId_;
    }

    public void setArrayOrId(PArrayOrId node)
    {
        if(this._arrayOrId_ != null)
        {
            this._arrayOrId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._arrayOrId_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._arrayOrId_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._arrayOrId_ == child)
        {
            this._arrayOrId_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._arrayOrId_ == oldChild)
        {
            setArrayOrId((PArrayOrId) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
