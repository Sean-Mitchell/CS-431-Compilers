/* This file was generated by SableCC (http://www.sablecc.org/). */

package Project5.parser;

import Project5.node.*;
import Project5.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTPlusop(@SuppressWarnings("unused") TPlusop node)
    {
        this.index = 0;
    }

    @Override
    public void caseTNegop(@SuppressWarnings("unused") TNegop node)
    {
        this.index = 1;
    }

    @Override
    public void caseTMultop(@SuppressWarnings("unused") TMultop node)
    {
        this.index = 2;
    }

    @Override
    public void caseTCond(@SuppressWarnings("unused") TCond node)
    {
        this.index = 3;
    }

    @Override
    public void caseTBegin(@SuppressWarnings("unused") TBegin node)
    {
        this.index = 4;
    }

    @Override
    public void caseTBreak(@SuppressWarnings("unused") TBreak node)
    {
        this.index = 5;
    }

    @Override
    public void caseTCase(@SuppressWarnings("unused") TCase node)
    {
        this.index = 6;
    }

    @Override
    public void caseTClassLit(@SuppressWarnings("unused") TClassLit node)
    {
        this.index = 7;
    }

    @Override
    public void caseTDefault(@SuppressWarnings("unused") TDefault node)
    {
        this.index = 8;
    }

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 9;
    }

    @Override
    public void caseTEnd(@SuppressWarnings("unused") TEnd node)
    {
        this.index = 10;
    }

    @Override
    public void caseTFalse(@SuppressWarnings("unused") TFalse node)
    {
        this.index = 11;
    }

    @Override
    public void caseTFor(@SuppressWarnings("unused") TFor node)
    {
        this.index = 12;
    }

    @Override
    public void caseTGet(@SuppressWarnings("unused") TGet node)
    {
        this.index = 13;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 14;
    }

    @Override
    public void caseTNew(@SuppressWarnings("unused") TNew node)
    {
        this.index = 15;
    }

    @Override
    public void caseTPut(@SuppressWarnings("unused") TPut node)
    {
        this.index = 16;
    }

    @Override
    public void caseTReturn(@SuppressWarnings("unused") TReturn node)
    {
        this.index = 17;
    }

    @Override
    public void caseTSwitch(@SuppressWarnings("unused") TSwitch node)
    {
        this.index = 18;
    }

    @Override
    public void caseTThen(@SuppressWarnings("unused") TThen node)
    {
        this.index = 19;
    }

    @Override
    public void caseTTrue(@SuppressWarnings("unused") TTrue node)
    {
        this.index = 20;
    }

    @Override
    public void caseTWhile(@SuppressWarnings("unused") TWhile node)
    {
        this.index = 21;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 22;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 23;
    }

    @Override
    public void caseTPeriod(@SuppressWarnings("unused") TPeriod node)
    {
        this.index = 24;
    }

    @Override
    public void caseTSemicolon(@SuppressWarnings("unused") TSemicolon node)
    {
        this.index = 25;
    }

    @Override
    public void caseTEquals(@SuppressWarnings("unused") TEquals node)
    {
        this.index = 26;
    }

    @Override
    public void caseTIncr(@SuppressWarnings("unused") TIncr node)
    {
        this.index = 27;
    }

    @Override
    public void caseTDecr(@SuppressWarnings("unused") TDecr node)
    {
        this.index = 28;
    }

    @Override
    public void caseTLparen(@SuppressWarnings("unused") TLparen node)
    {
        this.index = 29;
    }

    @Override
    public void caseTRparen(@SuppressWarnings("unused") TRparen node)
    {
        this.index = 30;
    }

    @Override
    public void caseTLbracket(@SuppressWarnings("unused") TLbracket node)
    {
        this.index = 31;
    }

    @Override
    public void caseTRbracket(@SuppressWarnings("unused") TRbracket node)
    {
        this.index = 32;
    }

    @Override
    public void caseTLcurly(@SuppressWarnings("unused") TLcurly node)
    {
        this.index = 33;
    }

    @Override
    public void caseTRcurly(@SuppressWarnings("unused") TRcurly node)
    {
        this.index = 34;
    }

    @Override
    public void caseTTypeDecl(@SuppressWarnings("unused") TTypeDecl node)
    {
        this.index = 35;
    }

    @Override
    public void caseTId(@SuppressWarnings("unused") TId node)
    {
        this.index = 36;
    }

    @Override
    public void caseTReal(@SuppressWarnings("unused") TReal node)
    {
        this.index = 37;
    }

    @Override
    public void caseTInt(@SuppressWarnings("unused") TInt node)
    {
        this.index = 38;
    }

    @Override
    public void caseTAnychars(@SuppressWarnings("unused") TAnychars node)
    {
        this.index = 39;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 40;
    }
}
