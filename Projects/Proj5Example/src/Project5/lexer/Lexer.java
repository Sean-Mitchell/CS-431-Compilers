/* This file was generated by SableCC (http://www.sablecc.org/). */

package Project5.lexer;

import java.io.*;
import Project5.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlusop(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNegop(line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMultop(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCond(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBegin(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBreak(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCase(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TClassLit(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDefault(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnd(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalse(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFor(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGet(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNew(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPut(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReturn(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSwitch(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThen(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTrue(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhile(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPeriod(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEquals(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIncr(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDecr(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLparen(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRparen(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLbracket(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRbracket(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLcurly(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRcurly(line, pos); }
    Token new35(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTypeDecl(text, line, pos); }
    Token new36(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new37(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(text, line, pos); }
    Token new38(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInt(text, line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnychars(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhitespace(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {33, 33, 5}, {34, 34, 6}, {40, 40, 7}, {41, 41, 8}, {42, 42, 9}, {43, 43, 10}, {44, 44, 11}, {45, 45, 12}, {46, 46, 13}, {47, 47, 14}, {48, 57, 15}, {58, 58, 16}, {59, 59, 17}, {60, 60, 18}, {61, 61, 19}, {62, 62, 20}, {65, 65, 21}, {66, 66, 22}, {67, 67, 23}, {68, 68, 24}, {69, 69, 25}, {70, 70, 26}, {71, 71, 27}, {72, 72, 21}, {73, 73, 28}, {74, 77, 21}, {78, 78, 29}, {79, 79, 21}, {80, 80, 30}, {81, 81, 21}, {82, 82, 31}, {83, 83, 32}, {84, 84, 33}, {85, 85, 21}, {86, 86, 34}, {87, 87, 35}, {88, 90, 21}, {91, 91, 36}, {93, 93, 37}, {97, 122, 38}, {123, 123, 39}, {125, 125, 40}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 41}, {13, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 42}, },
            {{9, 9, 43}, {10, 10, 44}, {13, 13, 45}, {32, 32, 46}, {35, 255, 47}, },
            {},
            {},
            {},
            {{43, 43, 48}, },
            {},
            {{45, 45, 49}, },
            {},
            {},
            {{46, 46, 50}, {48, 57, 51}, },
            {{61, 61, 52}, },
            {},
            {{61, 61, 53}, },
            {{61, 61, 54}, },
            {{61, 61, 55}, },
            {{48, 57, 56}, {65, 90, 57}, {95, 95, 58}, {97, 122, 59}, },
            {{48, 57, 56}, {65, 68, 57}, {69, 69, 60}, {70, 78, 57}, {79, 79, 61}, {80, 81, 57}, {82, 82, 62}, {83, 90, 57}, {95, 122, -23}, },
            {{48, 57, 56}, {65, 65, 63}, {66, 75, 57}, {76, 76, 64}, {77, 90, 57}, {95, 122, -23}, },
            {{48, 68, -24}, {69, 69, 65}, {70, 90, 57}, {95, 122, -23}, },
            {{48, 57, 56}, {65, 75, 57}, {76, 76, 66}, {77, 77, 57}, {78, 78, 67}, {79, 90, 57}, {95, 122, -23}, },
            {{48, 57, 56}, {65, 65, 68}, {66, 78, 57}, {79, 79, 69}, {80, 90, 57}, {95, 122, -23}, },
            {{48, 68, -24}, {69, 69, 70}, {70, 122, -26}, },
            {{48, 57, 56}, {65, 69, 57}, {70, 70, 71}, {71, 77, 57}, {78, 78, 72}, {79, 122, -27}, },
            {{48, 68, -24}, {69, 69, 73}, {70, 122, -26}, },
            {{48, 57, 56}, {65, 84, 57}, {85, 85, 74}, {86, 90, 57}, {95, 122, -23}, },
            {{48, 68, -24}, {69, 69, 75}, {70, 122, -26}, },
            {{48, 57, 56}, {65, 83, 57}, {84, 84, 76}, {85, 86, 57}, {87, 87, 77}, {88, 90, 57}, {95, 122, -23}, },
            {{48, 57, 56}, {65, 71, 57}, {72, 72, 78}, {73, 81, 57}, {82, 82, 79}, {83, 122, -24}, },
            {{48, 57, 56}, {65, 78, 57}, {79, 79, 80}, {80, 122, -28}, },
            {{48, 71, -35}, {72, 72, 81}, {73, 90, 57}, {95, 122, -23}, },
            {},
            {},
            {{48, 122, -23}, },
            {},
            {},
            {{9, 32, -2}, },
            {},
            {{9, 32, -8}, {34, 34, 82}, {35, 255, 47}, },
            {{9, 255, -45}, },
            {{9, 9, 43}, {10, 10, 83}, {13, 255, -45}, },
            {{9, 255, -45}, },
            {{9, 255, -45}, },
            {},
            {},
            {{48, 57, 84}, },
            {{46, 57, -17}, },
            {},
            {},
            {},
            {},
            {{48, 57, 56}, },
            {{65, 90, 57}, {97, 122, 59}, },
            {{95, 95, 58}, },
            {{65, 122, -59}, },
            {{65, 70, 57}, {71, 71, 85}, {72, 90, 57}, {97, 122, 59}, },
            {{65, 78, 57}, {79, 79, 86}, {80, 90, 57}, {97, 122, 59}, },
            {{65, 68, 57}, {69, 69, 87}, {70, 90, 57}, {97, 122, 59}, },
            {{65, 82, 57}, {83, 83, 88}, {84, 90, 57}, {97, 122, 59}, },
            {{65, 65, 89}, {66, 90, 57}, {97, 122, 59}, },
            {{65, 69, 57}, {70, 70, 90}, {71, 90, 57}, {97, 122, 59}, },
            {{65, 82, 57}, {83, 83, 91}, {84, 122, -65}, },
            {{65, 67, 57}, {68, 68, 92}, {69, 90, 57}, {97, 122, 59}, },
            {{65, 75, 57}, {76, 76, 93}, {77, 90, 57}, {97, 122, 59}, },
            {{65, 81, 57}, {82, 82, 94}, {83, 90, 57}, {97, 122, 59}, },
            {{65, 83, 57}, {84, 84, 95}, {85, 90, 57}, {97, 122, 59}, },
            {{65, 122, -59}, },
            {{65, 83, 57}, {84, 84, 96}, {85, 122, -72}, },
            {{65, 86, 57}, {87, 87, 97}, {88, 90, 57}, {97, 122, 59}, },
            {{65, 83, 57}, {84, 84, 98}, {85, 122, -72}, },
            {{65, 65, 99}, {66, 83, 57}, {84, 84, 100}, {85, 122, -72}, },
            {{65, 81, 57}, {82, 82, 101}, {83, 122, -71}, },
            {{65, 72, 57}, {73, 73, 102}, {74, 90, 57}, {97, 122, 59}, },
            {{65, 68, 57}, {69, 69, 103}, {70, 122, -64}, },
            {{65, 84, 57}, {85, 85, 104}, {86, 90, 57}, {97, 122, 59}, },
            {{65, 72, 57}, {73, 73, 105}, {74, 122, -79}, },
            {{65, 72, 57}, {73, 73, 106}, {74, 122, -79}, },
            {},
            {{9, 255, -45}, },
            {{48, 57, 84}, },
            {{65, 72, 57}, {73, 73, 107}, {74, 122, -79}, },
            {{65, 75, 57}, {76, 76, 108}, {77, 122, -70}, },
            {{65, 65, 109}, {66, 122, -66}, },
            {{65, 68, 57}, {69, 69, 110}, {70, 122, -64}, },
            {{65, 82, 57}, {83, 83, 111}, {84, 122, -65}, },
            {{65, 65, 112}, {66, 122, -66}, },
            {{65, 68, 57}, {69, 69, 113}, {70, 122, -64}, },
            {{65, 122, -59}, },
            {{65, 82, 57}, {83, 83, 114}, {84, 122, -65}, },
            {{65, 122, -59}, },
            {{65, 122, -59}, },
            {{65, 122, -59}, },
            {{65, 122, -59}, },
            {{65, 122, -59}, },
            {{65, 75, 57}, {76, 76, 115}, {77, 122, -70}, },
            {{65, 84, 57}, {85, 85, 116}, {86, 122, -81}, },
            {{65, 72, 57}, {73, 73, 117}, {74, 122, -79}, },
            {{65, 83, 57}, {84, 84, 118}, {85, 122, -72}, },
            {{65, 77, 57}, {78, 78, 119}, {79, 90, 57}, {97, 122, 59}, },
            {{65, 68, 57}, {69, 69, 120}, {70, 122, -64}, },
            {{65, 67, 57}, {68, 68, 121}, {69, 122, -69}, },
            {{65, 75, 57}, {76, 76, 122}, {77, 122, -70}, },
            {{65, 77, 57}, {78, 78, 123}, {79, 122, -105}, },
            {{65, 68, 57}, {69, 69, 124}, {70, 122, -64}, },
            {{65, 74, 57}, {75, 75, 125}, {76, 90, 57}, {97, 122, 59}, },
            {{65, 122, -59}, },
            {{65, 82, 57}, {83, 83, 126}, {84, 122, -65}, },
            {{65, 84, 57}, {85, 85, 127}, {86, 122, -81}, },
            {{65, 122, -59}, },
            {{65, 68, 57}, {69, 69, 128}, {70, 122, -64}, },
            {{65, 122, -59}, },
            {{65, 81, 57}, {82, 82, 129}, {83, 122, -71}, },
            {{65, 77, 57}, {78, 78, 130}, {79, 122, -105}, },
            {{65, 66, 57}, {67, 67, 131}, {68, 90, 57}, {97, 122, 59}, },
            {{65, 122, -59}, },
            {{65, 122, -59}, },
            {{65, 122, -59}, },
            {{65, 68, 57}, {69, 69, 132}, {70, 122, -64}, },
            {{65, 122, -59}, },
            {{65, 65, 133}, {66, 122, -66}, },
            {{65, 122, -59}, },
            {{65, 122, -59}, },
            {{65, 75, 57}, {76, 76, 134}, {77, 122, -70}, },
            {{65, 122, -59}, },
            {{65, 77, 57}, {78, 78, 135}, {79, 122, -105}, },
            {{65, 70, 57}, {71, 71, 136}, {72, 122, -62}, },
            {{65, 71, 57}, {72, 72, 137}, {73, 90, 57}, {97, 122, 59}, },
            {{65, 122, -59}, },
            {{65, 77, 57}, {78, 78, 138}, {79, 122, -105}, },
            {{65, 83, 57}, {84, 84, 139}, {85, 122, -72}, },
            {{65, 122, -59}, },
            {{65, 122, -59}, },
            {{65, 122, -59}, },
            {{65, 122, -59}, },
            {{65, 122, -59}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 40, 40, 40, 40, -1, -1, 29, 30, 2, 0, 22, 1, 24, 2, 38, 23, 25, 3, -1, 3, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 31, 32, 36, 33, 34, 40, 3, -1, -1, -1, -1, -1, 27, 28, -1, 38, 26, 3, 3, 3, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 14, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 39, -1, 37, 36, 36, 36, 36, 36, 36, 36, 10, 36, 12, 13, 35, 15, 16, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 6, 36, 36, 9, 36, 35, 36, 36, 36, 19, 20, 35, 36, 4, 36, 5, 7, 36, 11, 36, 36, 36, 21, 36, 36, 17, 35, 18, 35, 8, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
